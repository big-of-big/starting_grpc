syntax ="proto3";
package pancake.maker;

option go_package = "gen/api";

import "google/protobuf/timestamp.proto";

service PancakeBakeService {
  rpc Bake(BakeRequest) returns (BakeResponse){}
  rpc Report(ReportRequest) returns (ReportResponse){}
}

message PanCake {
  enum Menu {
    UNKNOWN = 0;
    SPICY_CURRY = 1;
    MIX_BERRY = 2;
    BANANA = 3;
  }

  string chef_name = 1;
  Menu menu = 2;
  float technical_score =3;
  google.protobuf.Timestamp create_time = 15;
}

message Report {
  message BakeCount {
    Pancake.Menu menu = 1;
    int32 count = 2;
  }
  repeated BakeCount bake_counts = 1;
}

// pancakeのみでもいいが、ラップすることにより拡張性が高まる
message BakeRequest {
  Pancake.Menu menu = 1;
}

message BakeResponse {
  Pancake pancake = 1;
}

message ReportRequest {}

message ReportResponse {
  Report report = 1;
}
